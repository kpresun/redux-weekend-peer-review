Hey ___,

General Feedback.

---
| Functional Requirements | Complete? |
| --- | :---: |
| Multi page form with client side routing and navigation (next button) | y |
| Data stored in Redux when navigating from page to page | y |
| User is notified when trying to leave a blank score | n |
| Review Component displays scores and comments from current redux state | y |
| Submit button sends data to the server via Axios | y |
| Confirmaion Page displays after data is POSTed to the server | y |
| Button on Confirmation Page clears Redux and starts a new survey | n |
| Views are broken down into components | y |

client side code 

---
| Individual components for each form part | Complete? |
| --- | :---: |
| Redux setup complete | y |
| Store linked to react with <Provider> | y |
| Store setup with reducer(s) and logger middleware | y |
| Reducers & Actions Working | y |
| Actions are in SCREAMING_SNAKE_CASE and semantically named | y |
| Actions have a type key, and payload if sending data | y |
| Reducers are returning a new state, or the old state (not mutating) | y |
| Reducers are using spread correctly (to keep old data, while adding new) | n/a |
| Review Component shows at all times with current redux state | y |
| React-Redux Working | y |
| Dispatching actions onClick | y |
| Grabbing data from the redux store with useSelector | y |
| Axios POST request to add feedback | y |
Server code:

| Router made for GET, POST | y |

---
### Notes:

Notes on the above Functional Requirements.

---
| General Items | Complete? |
| --- | :---: |
| More than 15 git commits | y |
| Commits are descriptive of the changes made or feature added | y |
| Readme file updated | y |
| Appropriate amount of code comments | n |
| Code is consistently formatted | y |
| Server code organized with router & module files | y |

---
### Notes:

Overall the application is built very well. Missing only 2 base requirements for the app: Users were not notified when inputs were not chosen and reducers
are not cleared when 'new feedback' button is click to restart the form. 

Great code, concise and organized. It just needs more code comments to help understand how everything is working together and fix 2 missing base items. Great job!

